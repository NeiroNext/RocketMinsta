
void MG_Enable(void);
void MG_Disable(void);
void MG_Draw(void);
void MG_Init(void);
float MG_Input(float bInputType, float nPrimary, float nSecondary);

typedef void(void) mg_thinkfunc_t;
.mg_thinkfunc_t mg_think;
.float mg_nextthink;

.float mg_radius;
.float mg_spawntime;

.float mg_class;

entity mg_ent_first;
entity mg_ent_last;
.entity mg_ent_next;
.entity mg_ent_prev;

#define MG_WORLD_X          800
#define MG_WORLD_Y          1000

#define MG_KEY_UP           119     // w
#define MG_KEY_DOWN         115     // s
#define MG_KEY_LEFT         97      // a
#define MG_KEY_RIGHT        100     // d
#define MG_KEY_FIRE         32      // space
#define MG_KEY_FOCUS        106     // j

#define MG_KEYFLAG_UP       1
#define MG_KEYFLAG_DOWN     2
#define MG_KEYFLAG_LEFT     4
#define MG_KEYFLAG_RIGHT    8
#define MG_KEYFLAG_FIRE     16
#define MG_KEYFLAG_FOCUS    32

#define MG_TARGET_FRAMETIME 0.001

#define MG_ENT_REMOVED      -1
#define MG_ENT_NOCLASS      0
#define MG_ENT_PLAYER       1
#define MG_ENT_PROJECTILE   2
#define MG_ENT_ENEMY        3
#define MG_ENT_PARTICLE     4

#define FOR_EACH_MG_ENT(e) for(e = mg_ent_first; e; e = e.mg_ent_next) if(e.mg_class != MG_ENT_REMOVED)
