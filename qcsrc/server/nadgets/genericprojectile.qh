
.float hg_spawntime;
.float hg_ranthink;
.float hg_deathtime;
.vector hg_lastvel;
.vector hg_deferredVel;
.float hg_raze_randelayed;
.vector hg_maxVelocity;
.vector hg_minVelocity;
.float hg_fireSpawnTime;
.float hg_nextsnd;
.float hg_sndcount;

float HG_GenericProjectile_CSQCProjType(float t);
entity HG_GenericProjectile(float hgtype, vector ang, float silent);
void HG_GenericProjectile_Remove(void);
void HG_GenericProjectile_Detonate(entity nade);
void HG_GenericProjectile_DetonateAll(entity plr);
void HG_GenericProjectile_ThrowNapalm(void);
void HG_GenericProjectile_RadiusDamage(void);
float HG_GenericProjectile_Attack(float hgtype);
#define HG_GENERIC_ATTACKFUNC(hgtype,hgid) HG_HOOKFUNCTION(hgtype, Attack) { return HG_GenericProjectile_Attack(hgid); }

HG_GENERIC_ATTACKFUNC(normal,   HG_NORMAL)
HG_GENERIC_ATTACKFUNC(remote,   HG_REMOTE)
HG_GENERIC_ATTACKFUNC(plasma,   HG_PLASMA)
HG_GENERIC_ATTACKFUNC(laser,    HG_LASER)
HG_GENERIC_ATTACKFUNC(raze,     HG_RAZE)
HG_GENERIC_ATTACKFUNC(transloc, HG_TRANSLOC)
HG_GENERIC_ATTACKFUNC(napalm,   HG_NAPALM)
