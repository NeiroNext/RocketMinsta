
void HG_Init();
void HG_Precache();
void HG_Frame();
void HG_Attack();
void HG_PlayerSpawn();
void HG_PlayerSpawnEx(entity);
void HG_PlayerJoin();
void HG_ResetState(entity);
void HG_GiveBonus(entity, float, float, string);
void HG_Napalm();
float HG_PlayerMayFire(entity);
void HG_Detonate(entity);
void HG_DetonateAll(entity);
float HG_PlayerMayDetonate(entity);
float HG_ShowMenu(float);
void HG_Grenade_Remove();
void HG_Grenade_Think();
void HG_Remote_Stick();
float HG_RegenTime(entity);

.vector org_explosion;
.float nextparticle;

.float hg_power;
.float hg_state;
.float hg_next;
.float hg_ammo;
.float hg_type;
.float hg_type_picked;
.float hg_type_picked_nextround;
.float hg_bonus;
.float hg_bonustype;
.float hg_isbonus;
.float hg_regentime;
.float hg_regenpaused;
.float hg_deathtime;
.float hg_detonable;
.float hg_detonatetime;
.float hg_detonatedelay;
.float hg_detonateready;
.float hg_detonables;
.float hg_detonable_updated;
.float hg_nextsnd;
.float hg_sndcount;
.float hg_clearammo;
.float hg_detonatepressed;
.float hg_ranthink;
.float hg_wp_nextthink;
.float hg_wp_state;
.float hg_remote_sticked;
.float hg_nadesused;
.float hg_optout;
.float hg_optout_nextround;
.float hg_alwaysask;

.float hg_shield;
.float hg_shieldpower;
.float hg_shieldmax;
.float hg_shieldhealth;
.float hg_shield_oldmovetype;
.entity hg_shieldmodel;

.float hg_stealth;
.float hg_stealthalpha;
.float hg_stealthtime;
.float hg_wasstealth;

.float hg_plasma_projrange;
.float hg_plasma_projdps;
.float hg_plasma_projdps_delay;
.float hg_plasma_projdps_next;
.float hg_plasma_projdps_last;
.float hg_plasma_projdist;

.entity hg_linker;
.float hg_linker_range;
.float hg_linker_factor;
.float hg_linker_hps;
.float hg_linker_buffpower;

// for hud only
.float hg_regenstat;
.float hg_launchspeed;

.vector hg_normal;
.entity hg_waypoint;

float g_handgrenades_oldhitboxes;
float g_handgrenades_detonatelaunches;

float hg_plasma_group;

#define BUTTON_HG ((g_handgrenades_detonatelaunches)? hg_detonatepressed : button6)
#define GRENVARNAME(t,v) strcat("g_handgrenades_", HG_TypeToName(t), "_", (v))
#define GRENVAR(t,v) (cvar(GRENVARNAME(t,v)))
#define HG_PLAYERNADETYPE(p) (((p).hg_bonus)? ((p).hg_bonustype) : ((p).hg_type))

#define IF_HG_LINKER_APPLICABLE(p) if(p.takedamage) if(!p.jb_isprisoned) if(p.deadflag == DEAD_NO) if(!p.frozen)
