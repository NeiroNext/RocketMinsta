
#define SPECFIELDS \
    SPECFIELD(ammo_cells) \
    SPECFIELD(ammo_fuel) \
    SPECFIELD(ammo_nails) \
    SPECFIELD(ammo_rockets) \
    SPECFIELD(ammo_shells) \
    SPECFIELD(angles) \
    SPECFIELD(armortype) \
    SPECFIELD(armorvalue) \
    SPECFIELD(buff_endur_dmgpool) \
    SPECFIELD(buffstat) \
    SPECFIELD(buff_vamp_healthpool) \
    SPECFIELD(dmg_inflictor) \
    SPECFIELD(dmg_save) \
    SPECFIELD(dmg_take) \
    SPECFIELD(dom_captureprogress) \
    SPECFIELD(effects) \
    SPECFIELD(frozen) \
    SPECFIELD(health) \
    SPECFIELD(hg_ammo1) \
    SPECFIELD(hg_ammo2) \
    SPECFIELD(hg_bonus) \
    SPECFIELD(hg_bonustype) \
    SPECFIELD(hg_detonables) \
    SPECFIELD(hg_launchspeed) \
    SPECFIELD(hg_maxregentime1) \
    SPECFIELD(hg_maxregentime2) \
    SPECFIELD(hg_next1) \
    SPECFIELD(hg_next2) \
    SPECFIELD(hg_power) \
    SPECFIELD(hg_regenpaused1) \
    SPECFIELD(hg_regenpaused2) \
    SPECFIELD(hg_regenrate1) \
    SPECFIELD(hg_regenrate2) \
    SPECFIELD(hg_regentime1) \
    SPECFIELD(hg_regentime2) \
    SPECFIELD(hg_sentry_capture_progress) \
    SPECFIELD(hg_shield_damage_per_shot) \
    SPECFIELD(hg_shieldpower) \
    SPECFIELD(hg_shieldstat) \
    SPECFIELD(hg_shield_stored) \
    SPECFIELD(hg_shield_stored_limit) \
    SPECFIELD(hg_stealth) \
    SPECFIELD(hg_stealth_saved) \
    SPECFIELD(hg_type1) \
    SPECFIELD(hg_type2) \
    SPECFIELD(invincible_finished) \
    SPECFIELD(items) \
    SPECFIELD(jb_message) \
    SPECFIELD(jb_roundlost) \
    SPECFIELD(jb_unlock_progress) \
    SPECFIELD(kh_state) \
    SPECFIELD(metertime) \
    SPECFIELD(pressedkeys) \
    SPECFIELD(punchangle) \
    SPECFIELD(revprogress) \
    SPECFIELD(sm_canattach) \
    SPECFIELD(strength_finished) \
    SPECFIELD(switchweapon) \
    SPECFIELD(v_angle) \
    SPECFIELD(velocity) \
    SPECFIELD(view_ofs) \
    SPECFIELD(w_clip_limit_stat) \
    SPECFIELD(w_clip_loaded_stat) \
    SPECFIELD(weapon) \
    SPECFIELD(weapons) \
    SPECFIELD(w_inring_cycle) \
    SPECFIELD(w_inring_fulltime) \
    SPECFIELD(zapper_heat) \

