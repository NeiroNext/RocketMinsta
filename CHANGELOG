
People who have contributed to a particular change are listed in brackets after the change description in descending order of importance/amount of work done.
A question mark following a contributor's name means that I don't remember/exactly know the name of the contributor and just guessing. Probably because I shamelessly stole that certain feature from Xonotic.
If nobody is listed, assume [Akari].

=== v1.6.0 -> v1.7.0 (upcoming) ===

 - General:
    * The kd scoreboard column has been renamed to kdr and will no longer show negative values
    * Suicides are now properly registered as deaths
    * RM now uses it's own custom effectinfo. If it fails to load, it will attempt to fall back to default Nexuiz effects where possible.
    * Miscellaneous new cvars:
        seta g_balance_campingrifle_primary_bulletcost 1
        seta g_balance_campingrifle_secondary_bulletcost 1
        seta g_balance_campingrifle_secondary_spread_addedperbullet 0
        seta g_balance_campingrifle_secondary_spread_resettime 0.2
        seta sv_dps 0 "Enables the DPS meter. For testing"
        seta sv_spectate_delay 3 "Delay 'cmd spectate' requests by this much seconds"
    * New RM-specific entities have been added to the rm.entities.def file (for mappers)

 - Jailbreak:
    * Default g_jailbreak_point_limit changed to 5 (was 10)
    * Default g_jailbreak_controlpoint_unlock_speed changed to 0.25 (was 0.5)
    * Default g_jailbreak_controlpoint_idletime changed to 45 (was 30)
    * Default g_jailbreak_penalty_teamkill changed to 20 (was 70)
    * Added support for controlpoint cooldown growth with each successive capture
        - Configured with the following cvars:
            seta g_jailbreak_controlpoint_idletime 45 "For how long a controlpoint becomes inactive after it's been captured. The formula is: idletime + times_captured^power * idletime * factor"
            seta g_jailbreak_controlpoint_idletime_power 1.2 "See g_jailbreak_controlpoint_idletime"
            seta g_jailbreak_controlpoint_idletime_factor 1 "See g_jailbreak_controlpoint_idletime"
            seta g_jailbreak_controlpoint_idletime_initial 30 "For how long a controlpoint stays inactive at the beginning of the round"
    * Added support for global controlpoint cooldown
        - Configured with the following cvars:
            seta g_jailbreak_controlpoint_idletime_global 20 "For how long all team's controlpoints become inactive after the opposite team successfully jailbreaks"
            seta g_jailbreak_controlpoint_idletime_global_own 5 "Same as idletime_global, but for the capturer's team"
    * Added support for neutral controlpoints (entity class: jailbreak_controlpoint_neutral). Neutral controlpoints do not require a target to function, as long as team controlpoints pointing to correct jailbreak targets are available.
        - Configured with the following cvars:
            seta g_jailbreak_controlpoint_idletime_neutral 45 "Idletime for the neutral controlpoint. See g_jailbreak_controlpoint_idletime"
            seta g_jailbreak_controlpoint_idletime_neutral_initial 40 "Initial idletime for the neutral control point"
            seta g_jailbreak_controlpoint_idletime_neutral_power 1 "See g_jailbreak_controlpoint_idletime_neutral"
            seta g_jailbreak_controlpoint_idletime_neutral_factor 1 "See g_jailbreak_controlpoint_idletime_neutral"
    * Added claim mode. In this mode, when a controlpoint is captured, it is assigned to the team that has captured it. It is enabled by default.
        - Configured with the following cvars:
            seta g_jailbreak_controlpoint_claim 1 "If enabled, controlpoints will change their team whenever they are triggered"
            seta g_jailbreak_controlpoint_claim_allneutral 0 "If enabled, all controlpoints will start as neutral in claim mode"
            seta g_jailbreak_controlpoint_claim_noneutral 1 "If enabled, neutral controlpoints will not be claimed"
    * Added enemy detection feature for controlpoints
        - Configured with the following cvars:
            seta g_jailbreak_controlpoint_detect_enemies 1000 "If >0, enables enemy detection feature. When an enemy is detected near a team's controlpoint, that team will be warned. Value controls the maximum detection range"
    * Controlpoints now may have names (netname entity field). The names of the captured controlpoints are now displayed in the jailbreak messages.
    * All controlpoints will now start inactive and begin activating at the start of the round
    * Controlpoints may no longer be activated after the round is over

 - Handgrenades:
    * Added a regeneration system
        - New cvars:
            seta g_handgrenades_regen_time 0 "Grenade regeneration time in seconds. A value of 0 disables regeneration. The regeneration delay is calculated by the following formula: regen_time + current_ammo^regen_power * regen_factor * regen_time"
            seta g_handgrenades_regen_factor 0.5 "See g_handgrenades_regen_time"
            seta g_handgrenades_regen_power 2 "See g_handgrenades_regen_power"
            seta g_handgrenades_regen_max 0 "Regenerate up to this much grenades. If 0, g_handgrenades_ammo will be used instead"
            seta g_handgrenades_regen_damagepause 3 "Suspend regeneration for this much seconds after taking damage"
            seta g_handgrenades_regen_frozenfactor 0.3 "Multiplies the regeneration rate by this factor while frozen in freezetag"
    * g_handgrenades_clearspeed cvar has been removed
    * g_handgrenades_speed is now adjusted per grenade type and is now named g_handgrenades_TYPE_launchspeed
        - If launchspeed is set to 0, the grenade will not have a launch time and instead will immediately launch at full force when the key is pressed.
    * g_handgrenades_mindelay is now adjusted per grenade type and is now named g_handgrenades_TYPE_cooldown
    * Added an on-demand detonation system. Grenades that support it can be detonated by the user with the dropweapon key.
        - Configured with the following cvar patterns:
            g_handgrenades_TYPE_detonable - boolean, whether to enable the detonation for this type or not
            g_handgrenades_TYPE_detonate_delay - amount of time the grenade will delay the explosion for after being triggered, in seconds
            g_handgrenades_TYPE_detonate_threshold - amount of time that must pass after a grenade has been launched before it can be detonated, in seconds.
        - New cvars:
            seta g_handgrenades_detonate_on_death 0 "If enabled, all player's detonable grenades will be automatically triggered on death"
    * Grenades may now take damage.
        - Configured with the following cvar patterns:
            g_handgrenades_TYPE_takedamage - boolean, whether a particular grenade type may take any damage
    * Added new grenade types: Fire Trap (remote), Plasma Bomb (plasma), Translocator (transloc). Unimplemented "sticky" type has been removed.
    * Default g_handgrenades_napalm_fire_lifetime changed to 20 (was 5)
    * Added a grenade selection system. If enabled, players may select a prefered grenade type from a defined list before joining a game.
        - Configured with the following cvars:
            seta g_handgrenades_type_selectable "" "A list of grenade types that players may pick from. If empty, the default is always used"
    * Handgrenade sounds are now properly precached
    * Grenade models are now colored by team
    * Players that join a freezetag or jailbreak game while it's already in progress will start with no grenades
    * Napalm Grenade's middlefire component is now properly removed when advancing into the next round
    * Miscellaneous new cvar patterns:
        g_handgrenades_TYPE_bouncelimit - how many bounces a grenade may take before it's exploded
        g_handgrenades_TYPE_movetype - the MOVETYPE_* constant used for grenade movement
    * Miscellaneous new cvars:
        seta g_handgrenades_bonus_free 0 "If enabled, bonus grenades are free and don't trigger the regeneration cooldown"
        seta g_handgrenades_oldhitboxes 0 "Use old tiny hitboxes for grenades (RM v1.6.0 and earlier). Not recommended for shootable grenades"
        seta g_handgrenades_detonatelaunches 0 "Use the detonation (dropweapon) button to launch the grenades"

 - CRA:
    - Grenades:
        * Players now spawn 1 handgrenade, down from 2.
        * The maximum amount of grenades has been increased to 9001, up from 2.
        * Grenades now regenerate over time. The time it takes to generate a new grenade depends on the amount of grenades a player already has. The current formula is:
                regen_time = base + base * factor * ammo^power,
                where base=20, factor=0.4, power=1.3, and ammo is the current amount of grenades possessed. The regeneration time is measured in seconds.
        * Grenades generate 70% slower while frozen in Freezetag.
        * Grenade ammo no longer gets reset after getting revived in Freezetag.
        * Players may now choose between 4 grenade modes: Hand Grenade, Fire Trap, Plasma Bomb and Translocator.
        * Most grenades are now killable.

    - Rifle:
        * Primary fire headshot bonus has been reduced to 90, down from 100. Headshots now hit for 150 damage total.
        * Secondary fire headshot bonus has been reduced to 5, down from 15.
        * Secondary fire now gains spread with each shot fired during the burst. It starts at 0.008 spread, and gains 0.0045 spread per shot. The streak resets after 0.2 seconds since the last shot. (was constant 0.008 spread).

    - Health and Armor:
        * Players now spawn with 200 health, up from 150.
        * Health and armor now rot at a slightly faster rate (rot value increased to 0.11, up from 0.1).
        * Health and armor rot delays after a health/armor pickup have been lowered to 2 seconds, down from 5.
        * Health rot delay after spawn has been lowered to 5 seconds, down from 10.

 - UFB:
    * Added a translocator config. It's disabled by default. Enable g_handgrenades to use it.

 - HUD:
    * Added support for the handgrenades HUD sector. Oldhud will use the old HG UI.
    * Added support for progressbar sectors
    * If the currently used weapon is the Camping Rifle and ammo is infinite, the ammo sector will now show the amount of loaded bullets
    * Scoreboard font size now can't be larger than 10
    * Added a built-in version of the "classic" HUD skin that is loaded if the other skins fail
    * HUD skins now use version verification
    * The powerups sector will now always show above the scores sector with althud 0
    * Rankings and visualscore have been slightly repositioned
    * The Camping Rifle magazine representation code has been rewriten. It now supports any maximum magazine size.
    * New skininfo keys (incomplete):
        progress_mode
        progress_sector_colormode
        progress_border_colormode
        progress_sector_color
        progress_border_color
        progress_sector_alpha
        progress_border_alpha
        progress_head_alpha
        progress_head_color
        progress_head_teamcolor (not implemented)
        extern_image_progress_head

=== v1.5.2 -> v1.6.0 ===

* Added kill/death ratio to the scoreboard by default
* Animated the map/gametype vote screen
* In freezetag, frozen players are now able to place Danger waypoints with the fire button
* Added some new HUD/scoreboard animations
* Integrated features and fixes from NexuizEx 0.3.1, a RocketMinsta v1.5.0 fork: http://naqua.net/p/nex/ [Blitter, Akari]:
	New, more reliable system for handling gametypes and mapinfo [Blitter, Akari]
	The Precious gametype [Blitter, Akari]
	Increased the g_maplist_votable limit up to 16 [Blitter]
	An option to disable the ip2c support without clearing the ip2c server URL [Blitter]
* Fixed a crash in the soulmate mutator
* In the soulmate mutator, the gems will try to use team-specific spawnpoints if possible
* Added server redirection features :
	The "redirect" server command: forces one player to connect to a specific server. Takes the player's id as the first argument and the server address or alias as the second argument.
	The "gotoserver" server command: forces all players on the server to connect to a specific server. Takes the server address or alias as the first argument.
	The server admin may define several aliases to be used instead of IPs in the aforementioned commands for convenience, for example:
		set sv_serveralias_coolserver nex.example.com:1337
		set sv_serveralias_crapserver nex.example.com:9001
		// "gotoserver coolserver" is now equivalent to "gotoserver nex.example.com.1337", and so on
	If the gotoserver command is votable, it can be restricted a whitelist of servers specified in the sv_gotoserver_whitelist cvar. Aliases are allowed.
* Merged the 'grenades' branch, which includes a type system for handgrenades and implements Napalm grenades [ThexDarksider, Akari]
* Added a bonus system for the handgrenades mutator
* Enabled dodging in the CRA config
* Added an adjustable force factor for dodging while frozen: g_freezetag_dodging_frozen_forcefactor
* Added shaders for freezetag iceblocks [Morphed?, Akari]
* Added a server option that allows to enforce custom fog settings for clients: g_rocketminsta_forcefog. This is used to implement the "night mode" on choobservers.
* Removed sv_forinterval and made it the default behaviour - this prevents clients from disabling the fog if it's present on the map or enforced by g_rocketminsta_forcefog
* New options for the grappling hook :
	g_balance_grapplehook_gravity - If enabled, the hook is affected by gravity
	g_balance_grapplehook_dontpull - If enabled, the hook won't pull the player towards the point the hook is attached to
	g_balance_grapplehook_dontpull_limit - If >0, defines the maximum tolerated hook length in the 'dontpull' mode
* Enabled the grappling hook (to pull frozen players) in the CRA config
* Made the hook compatible with the handgrenades mutator
* Improved the revival and grenade force progressbars in the HUD
* Improved the grappling hook animation
* Allowed mappers to place pickupable weapons in the g_weaponarena mode. Set the "spawninarena" key of a weapon entity to 1 to enable. A value of 2 makes it spawn only in g_weaponarena
* Fixed a VIP bug: if the player attached the "need help" waypoint then the vip waypoint is lost [svitoos]
* Added a new gametype: Jailbreak
* Added an option to prevent ballistic bullets from going through solid surfaces (g_ballistics_gothroughsolid), enabled it by default in CRA
* Added a FPS column to the scoreboard
* Improved the grenade explosion effect for the handgrenades mutator
* Changed g_turrets_unit_plasma_dual_aim_maxpitch to 90 in CRA
* Added an IRC-like /me feature for the chat
* Updated the README [accident, Akari]
* Added a chat autoreplacement system for the chat (see rockeminsta.cfg for configuration instructions)
* Added RM-specific entities.def file in extra/ (for mappers)
* Worked around a freezetag crash
* Changed styling of most of the bigprints
* Fixed a DumpStats bug which made it incompatible with rcon2irc, preventing it from reporting when a match is finished
* Added a custom loading picture
* Added a changelog
* Added an option which makes players drop their powerups upon death (g_droppowerups). Default on CRA
* Players now drop their soulgems when they get frozen if the Soulmates mutator is active
* Added a new "bigfont" (can be disable in RM options)
* Fixed incorrect centering of bigprints
* Optimized initial rmcfg reports
* Fixed a memory leak in rmcfg reports
* Improved the appearance of sbar info strings (such as fps, time, date, speed, etc)
* The average ping is now displayed for each team on the scoreboard
* Improved visuals of soulgems in the soulmates mutator and VIP :
	Gems now glow with their team's color
	Gems now fly around their carrier in the soulmates mutator
* Added boobs [Akari, Artefact]
* Fixed bugged sv_vote_gametype_shuffle - availability statuses now get properly updated too
* Fixed the rankings display
* Improved the EndRound code
* Added announcer sounds during warmups in round-based gametypes
* New rm-custom config: FastCRA
* Added a QuakeC config for the Geany IDE
* Renamed all of the RM cvars
* New serverinfo and MOTD display
* Optimized spectator info
* Made hudflash effects optional
